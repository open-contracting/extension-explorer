{
  "location": {
    "id": "location",
    "category": "item",
    "core": true,
    "name": {
      "en": "Location"
    },
    "description": {
      "en": "Communicates the location of proposed or executed contract delivery."
    },
    "latest_version": "v1.1.3",
    "versions": {
      "v1.1.3": {
        "id": "location",
        "date": "2018-02-01",
        "version": "v1.1.3",
        "base_url": "https://raw.githubusercontent.com/open-contracting-extensions/ocds_location_extension/v1.1.3/",
        "download_url": "https://api.github.com/repos/open-contracting-extensions/ocds_location_extension/zipball/v1.1.3",
        "publisher": {
          "name": "open-contracting-extensions",
          "url": "https://github.com/open-contracting-extensions"
        },
        "metadata": {
          "name": {
            "en": "Location"
          },
          "description": {
            "en": "Communicates the location of proposed or executed contract delivery."
          },
          "documentationUrl": {
            "en": "https://github.com/open-contracting/ocds_location_extension"
          },
          "codelists": [
            "locationGazetteers.csv",
            "geometryType.csv"
          ],
          "compatibility": [
            "1.1"
          ]
        },
        "schemas": {
          "record-package-schema.json": {},
          "release-package-schema.json": {},
          "release-schema.json": {
            "en": {
              "definitions": {
                "Item": {
                  "properties": {
                    "deliveryLocation": {
                      "title": "Delivery Location",
                      "description": "The location where activity related to this tender, contract or license will be delivered, or will take place.",
                      "$ref": "#/definitions/Location"
                    },
                    "deliveryAddress": {
                      "title": "Delivery Address",
                      "description": "The address to which, or where, goods or services related to this tender, contract or license will be delivered.",
                      "$ref": "#/definitions/Address"
                    }
                  }
                },
                "Location": {
                  "type": "object",
                  "title": "Delivery Location",
                  "description": "The location where activity related to this tender, contract or license will be delivered, or will take place. A location can be described by either a geometry (point location, line or polygon), or a gazetteer entry, or both.",
                  "properties": {
                    "description": {
                      "title": "Description",
                      "description": "A name or description of this location. This might include the name(s) of the location(s), or might provide a human readable description of the location to be covered. This description may be used in a user-interface.",
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "geometry": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "title": "Geometry",
                      "description": "We follow the [GeoJSON standard](http://geojson.org/) to express basic location information, using latitude and longitude values in the [WGS84](https://en.wikipedia.org/wiki/World_Geodetic_System) (EPSG:4326) projection.  A point location can be identified by geocoding a delivery address. For concession licenses, or other contracts covering a polygon location which is not contained in a known gazetteer, polygon and multi-polygon can be used.",
                      "properties": {
                        "type": {
                          "title": "Type",
                          "description": "The type of [GeoJSON Geometry Objects](http://geojson.org/geojson-spec.html#geometry-objects) being provided. To provide latitude and longitude use 'point', and enter an array of [latitude,longitude] as the value of coordinates field: e.g. [37.42,-122.085]. Note the capitalization of type values - set in order to maintain compatibility with GeoJSON.",
                          "type": [
                            "string",
                            "null"
                          ],
                          "enum": [
                            "Point",
                            "MultiPoint",
                            "LineString",
                            "MultiLineString",
                            "Polygon",
                            "MultiPolygon",
                            null
                          ],
                          "codelist": "geometryType.csv",
                          "openCodelist": false
                        },
                        "coordinates": {
                          "title": "Coordinates",
                          "description": "The relevant array of points, e.g. [latitude,longitude], or nested array, for the GeoJSON geometry being described. The longitude and latitude MUST be expressed in decimal degrees in the WGS84 (EPSG:4326) projection",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "number",
                              "array"
                            ]
                          }
                        }
                      }
                    },
                    "gazetteer": {
                      "type": [
                        "object",
                        "null"
                      ],
                      "title": "Gazetteer",
                      "description": "A gazetteer is a geographical index or directory. The specific gazetteer used should be specified in scheme, and one or more codes from that gazetteer used in identifier.",
                      "properties": {
                        "scheme": {
                          "title": "Gazetteer scheme",
                          "description": "The entry of the selected gazetteer in the gazetteers codelist. The codelist provides details of services, where available, that can resolve a gazetteer entry to provide location names.",
                          "type": [
                            "string",
                            "null"
                          ],
                          "codelist": "locationGazetteers.csv",
                          "openCodelist": true
                        },
                        "identifiers": {
                          "title": "Identifiers",
                          "description": "An array of one or more codes drawn from the gazetteer indicated in scheme.",
                          "type": [
                            "array",
                            "null"
                          ],
                          "items": {
                            "type": [
                              "string"
                            ]
                          }
                        }
                      }
                    },
                    "uri": {
                      "type": [
                        "string",
                        "null"
                      ],
                      "title": "URI",
                      "description": "A URI to a further description of the activity location. This may be a human readable document with information on the location, or a machine-readable description of the location."
                    }
                  }
                }
              }
            }
          }
        },
        "codelists": {
          "geometryType.csv": {
            "en": {
              "fieldnames": [
                "Code",
                "Title",
                "Description",
                "Source"
              ],
              "rows": [
                {
                  "Code": "Point",
                  "Title": "Point",
                  "Description": "For type 'Point', the 'coordinates' member is a single position.",
                  "Source": "https://tools.ietf.org/html/rfc7946#section-3.1"
                },
                {
                  "Code": "MultiPoint",
                  "Title": "MultiPoint",
                  "Description": "For type 'MultiPoint', the 'coordinates' member is an array of positions.",
                  "Source": "https://tools.ietf.org/html/rfc7946#section-3.1"
                },
                {
                  "Code": "LineString",
                  "Title": "LineString",
                  "Description": "For type 'LineString', the 'coordinates' member is an array of two or more positions.",
                  "Source": "https://tools.ietf.org/html/rfc7946#section-3.1"
                },
                {
                  "Code": "MultiLineString",
                  "Title": "MultiLineString",
                  "Description": "For type 'MultiLineString', the 'coordinates' member is an array of LineString coordinate arrays.",
                  "Source": "https://tools.ietf.org/html/rfc7946#section-3.1"
                },
                {
                  "Code": "Polygon",
                  "Title": "Polygon",
                  "Description": "For type 'Polygon', the 'coordinates' member MUST be an array of linear ring coordinate arrays.",
                  "Source": "https://tools.ietf.org/html/rfc7946#section-3.1"
                },
                {
                  "Code": "MultiPolygon",
                  "Title": "MultiPolygon",
                  "Description": "For type 'MultiPolygon', the 'coordinates' member is an array of Polygon coordinate arrays.",
                  "Source": "https://tools.ietf.org/html/rfc7946#section-3.1"
                }
              ]
            }
          },
          "locationGazetteers.csv": {
            "en": {
              "fieldnames": [
                "Category",
                "Code",
                "Title",
                "Description",
                "Source",
                "URI Pattern"
              ],
              "rows": [
                {
                  "Category": "Sub-National",
                  "Code": "NUTS",
                  "Title": "EU Nomenclature of Territorial Units for Statistics",
                  "Description": "The Nomenclature of Territorial Units for Statistics (NUTS) was established by Eurostat in order to provide a single uniform breakdown of territorial units for the production of regional statistics for the European Union.",
                  "Source": "http://simap.europa.eu/codes-and-nomenclatures/codes-nuts/index_en.htm",
                  "URI Pattern": "http://nuts.psi.enakting.org/id/"
                },
                {
                  "Category": "National",
                  "Code": "ISO2",
                  "Title": "ISO Country Codes (3166-1 alpha-2)",
                  "Description": "ISO 2-Digit Country Codes",
                  "Source": "http://www.iso.org/iso/country_codes.htm",
                  "URI Pattern": ""
                },
                {
                  "Category": "Universal",
                  "Code": "GEONAMES",
                  "Title": "GeoNames",
                  "Description": "GeoNames provides numerical identifiers for many points of interest around the world, including administrative divisions, populated centres and other locations, embedded within a structured tree of geographic relations.",
                  "Source": "http://www.geonames.org/",
                  "URI Pattern": "http://www.geonames.org/"
                },
                {
                  "Category": "Universal",
                  "Code": "OSMN",
                  "Title": "OpenStreetMap Node",
                  "Description": "OpenStreetMap Nodes consist of a single point in space defined by a latitude, longitude and node ID. Nodes may have tags to indicate the particular geographic feature they represent.",
                  "Source": "",
                  "URI Pattern": "http://www.openstreetmap.org/node/"
                },
                {
                  "Category": "Universal",
                  "Code": "OSMR",
                  "Title": "OpenStreetMap Relation",
                  "Description": "Relations are used to model logical (and usually local) or geographic relationships between objects. In practice, boundaries of geographic areas are available as Relations in OpenStreetMap.",
                  "Source": "http://wiki.openstreetmap.org/wiki/Relation",
                  "URI Pattern": "http://www.openstreetmap.org/relation/"
                },
                {
                  "Category": "Universal",
                  "Code": "OSMW",
                  "Title": "OpenStreetMap Way",
                  "Description": "An OpenStreetMap Way is an ordered list of OpenStreetMap nodes. May be used to describe fragments of roads or local boundaries and bounding boxes.",
                  "Source": "http://wiki.openstreetmap.org/wiki/Way",
                  "URI Pattern": "http://www.openstreetmap.org/way/"
                }
              ]
            }
          }
        },
        "readme": {
          "en": "# Location Data\n\nCommunicating the location of proposed or executed contract delivery is important to make users of contracting data.\n\nThis extension introduces two properties at the `items` level to describe location:\n\n* `deliveryAddress` - a standard `Address` block which can be used to provide a postal address where services should be delivered.\n* `deliveryLocation` - a new block consisting of GeoJSON and Gazetteer entries to describe a wider range of locations to which the contract line item relates.\n\n## Schema reference\n\n```eval_rst\n.. extensiontable::\n   :extension: location\n   :definitions: Location\n```\n\n## Gazetteer Codelist\n\nSee locationGazetteers.csv\n\n## Example\n\nBelow is an example of a geolocated item:\n\n```json\n{\n\"items\": [\n    {\n        \"id\": \"item1\",\n        \"description\": \"Ceremonial Trumpets for Oxford Town Hall\",\n        \"classification\": {\n            \"description\": \"Trumpets\",\n            \"scheme\": \"CPV\",\n            \"id\": \"37312100\",\n            \"uri\": \"http://purl.org/cpv/2008/code-37312100\"\n        },\n        \"deliveryLocation\": {\n            \"geometry\": {\n                \"type\": \"Point\",\n                \"coordinates\": [51.751944, -1.257778]\n            },\n            \"gazetteer\": {\n                \"scheme\": \"GEONAMES\",\n                \"identifiers\": [\"2640729\"]\n            },\n            \"description\": \"Central Oxford\",\n            \"uri\": \"http://www.geonames.org/2640729/oxford.html\"\n        },\n        \"deliveryAddress\": {\n            \"postalCode\": \"OX1 1BX\",\n            \"countryName\": \"United Kingdom\",\n            \"streetAddress\": \"Town Hall, St Aldate's\",\n            \"region\": \"Oxfordshire\",\n            \"locality\": \"Oxford\"\n        },\n        \"unit\": {\n            \"name\": \"Items\",\n            \"value\": {\n                \"currency\": \"GBP\",\n                \"amount\": 10000\n            }\n        },\n        \"quantity\": 10\n    }\n]\n}\n```\n\nIf the procurement related to the rebuilding of a road, then the item could also specify more complex geometries such as:\n\n```json\n{\n\"deliveryLocation\": {\n    \"geometry\": {\n        \"type\": \"LineString\",\n        \"coordinates\": [ [ -1.256503402048622, 51.747792026616821 ], [ -1.256477837243949, 51.747500168748303 ], [ -1.256466773131763, 51.747365723021403 ], [ -1.256471969911729, 51.747246699996332 ], [ -1.256481860557471, 51.747182243160943 ], [ -1.256497618535434, 51.747079648666102 ] ]\n    },\n    \"gazetteer\": {\n        \"scheme\": \"OSMW\",\n        \"identifiers\": [\"27895985\"]\n    },\n    \"description\": \"St Aldate's\",\n    \"uri\": \"http://www.geonames.org/2640729/oxford.html\"\n}\n}\n```\n\nYou can take the contents of the geometry object, excluding the `geometry` keyword, and plug this into any GeoJSON tool to see the shape that is described.\n\n## Issues\n\nReport issues for this extension in the [ocds-extensions repository](https://github.com/open-contracting/ocds-extensions/issues), putting the extension's name in the issue's title.\n\n## Changelog\n\n### v1.1.3\n\n* Disallow `Location.geometry.coordinates` from having null in its array of coordinates\n* Disallow `Location.gazetteer.identifiers` from having null in its array of strings\n* Correct name of locationGazetteers.csv codelist (was locationGazeteers.csv)\n* Allow `Location.geometry` and `Location.gazetteer` to be null\n* Add title and description to `Location.gazetteer`\n* Add description to `Item.deliveryLocation`, `Item.deliveryAddress`\n* Add geometryType.csv codelist for `Location.geometry.type`\n* List codelists in extension.json\n* Add tests and tidy code\n"
        }
      }
    }
  }
}